{"version":3,"sources":["utils/actions.js","utils/helpers.js","utils/queries.js","assets/spinner.gif","components/ProductItem/index.js","components/ProductList/index.js","components/CategoryMenu/index.js","utils/auth.js","components/CartItem/index.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","utils/reducers.js","utils/store.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductItem","item","state","useSelector","dispatch","useDispatch","image","price","quantity","cart","className","to","alt","src","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","ProductList","currentCategory","useQuery","loading","data","useEffect","products","forEach","then","length","filter","category","map","spinner","CategoryMenu","categories","categoryData","id","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","CartItem","useStoreContext","placeholder","value","onChange","target","role","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","initalState","createStore","action","newState","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe12169f.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + \"s\";\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"shop-shop\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"products\", { keyPath: \"_id\" });\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const { image, name, _id, price, quantity } = item;\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useQuery } from \"@apollo/client\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\";\nimport ProductItem from \"../ProductItem\";\n\nfunction ProductList() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction CategoryMenu() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img src={`/images/${item.image}`} alt=\"\" />\n      </div>\n      <div>\n        <div>\n          {item.name}, ${item.price}\n        </div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport Auth from \"../../utils/auth\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport CartItem from \"../CartItem\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Cart from \"../components/Cart\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from \"../assets/spinner.gif\";\n\nfunction Detail() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  const { products, cart } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{\" \"}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: \"both\",\n        paddingTop: 120,\n        textAlign: \"center\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">\n            🛍️\n          </span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from \"./actions\";\n\n//Initial State replaces Global State\nconst initalState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: \"\",\n};\n\nexport default function reducer(state = initalState, action) {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../src/utils/store\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"../src/utils/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    ,\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}